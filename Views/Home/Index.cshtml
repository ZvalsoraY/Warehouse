@*@model IEnumerable<Warehouse.Models.WarehouseProduct>*@
@model Warehouse.Models.ViewModels.WarehouseProductHomeVM
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Warehouse with numder of Product</h2>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="WarehouseProduct" asp-action="Upsert" class="btn btn-primary">
                <i class="fas fa-plus"></i> &nbsp; Create New numder of Product
            </a>
        </div>
        @*<form method="get">
            <div class="col-6">
                <label class="control-label">Select warehouse: </label>
                @Html.DropDownList("warehouse", Model.WarehouseInformationSelectList as SelectList,
                htmlAttributes: new { @class = "form-control" })

                <input type="submit" value="Фильтр" class="btn-primary" />

            </div>
        </form>*@
    </div>
</div>
<form method="get">
    <div class="row">
        <label class="text">Select warehouse: </label>
        @Html.DropDownList("warehouse", Model.WarehouseInformationSelectList as SelectList,
        htmlAttributes: new { @class = "col-6" })
        <div class="col-6 text-right">
            <input type="submit" value="Submit warehouse" class="btn-primary" />
        </div>
    </div>
</form>

<br />
<br />

@if (Model.WarehouseProducts.Count() > 0)
{

    <table class="table table-bordered table-striped" style="width: 100%">
        <thead>
            <tr>
                <th>Warehouse</th>
                <th>Product</th>
                <th> NumbProdInWarehouse</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model.WarehouseProducts)
            {
                <tr>
                    <td width="30%">@obj.WarehouseInformation.Name</td>
                    <td width="25%">@obj.Product.Name</td>
                    <td width="10%">@obj.NumbProdInWarehouse</td>

                    <td width="15%">                 
                      
                        <div class="input-group">
                            @*<input type="submit" value="-" class="button-minus" data-field="quantity">
                            <input type="submit" step="1" min="0" max="" value="@obj.NumbProdInWarehouse" name="quantity" asp-for="@obj.NumbProdInWarehouse" class="quantity-field">
                            <input type="submit" value="+" class="button-plus" data-field="quantity">
                            <input type="hidden" name="Id" value="@obj.Id" data-field="quantity" />*@

                            @*<button id="btnregister" type="button" class="hapus_krs" value="1">x</button>*@
                            @*<input type="button"  value="-" name="button-minus" id="@obj.Id">*@

                            @*<button id="btnmin" type="button" name="button-minus" value="@obj.Id">-</button>*@
                            <button type="button" onclick="AddProductToBasket(@obj.Id)" data-id="@obj.Id" class="productIdButton">-</button>
                            <input type="submit" step="1" min="0" max="" value="@obj.NumbProdInWarehouse">
                            <input type="submit" value="+" name="button-plus" onclick="NumberItems(@obj.Id ,@obj.NumbProdInWarehouse)">

                            @*<input type="hidden" name="Id" value="@obj.Id" data-field="quantity" />*@

                           @* <Buttons>
                                <Button Color="Color.Success" Outline Clicked="() => OnChangeQuantity(context, 1)">+</Button>
                                <Button Color="Color.Danger" Outline Clicked="() => OnChangeQuantity(context, -1)">-</Button>
                            </Buttons>*@

                        </div>
                        <div class="count-container">
                            <input type='button' value='-' class='qtyminus' data-field='quantity' />
                            <input type='number' name='quantity' step="1" min="10" max="13" value="@obj.NumbProdInWarehouse" @*value='0'*@ class='qty' />
                            <input type='button' value='+' class='qtyplus' data-field='quantity' />
                        </div>

                        


                    </td>
                       @* </div>
                    </div>*@

                    <td class="text-center">
                        <div class="w-75 btn-group" role="group">
                            <a asp-route-Id="@obj.Id" asp-action="Upsert" class="btn btn-primary mx-2">
                                Edit<i class="fas fa-edit"></i>
                            </a>
                            <a asp-route-Id="@obj.Id" asp-action="Delete" class="btn btn-danger mx-2">
                                Delete<i class="fas fa-trash-alt"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p> No ProdInWarehouse exists.</p>
}




@section Scripts
{

    <script>
        $(document).ready(function () {
            //$("#btnmin").click(function () {
            //$('button-minus').click(function () {
            $('.input-group').on('click', '.button-minus', function () {
                //var obj = { id: $("#btnmin").val()) };
                debugger;
                $.ajax({
                    url: "Home/NumberItems",
                    type: "GET",
                    data: {
                        //id: $(this).val(),
                        warehouseProductId: $("#btnmin").val(),
                    },
                    success: function (response) {
                        if (response.status === 'success') {
                            // Действия, если запрос был успешным.
                            Продолжи
                        } else {
                            // Обработка ошибок.
                        }
                    },
                });
            });
        });
    </script>

    <script type="text/javascript">

        function AddProductToBasket(productid) {
            try {
                $.ajax({
                    url: "Home/NumberItems",
                    type: "GET",
                    data: { warehouseProductId: productid },
                    success: function (oData) {
                        alert(oData);
                    },
                    error: function (error) {
                        alert(error);
                    }
                });
            }
            catch (e) {
                alert(e.message);
            }
        }
    </script>
    @*<script>
        $('.qtyplus').click(function (e) {
            e.preventDefault();
            var $container = $(this).closest('.count-container');
            var $field = $container.find('input[name=' + $(this).data('field') + ']');
            var currentVal = parseInt($field.val(), 10);
            if (!isNaN(currentVal)) {
                $field.val(currentVal + 1);
            } else {
                $field.val(0);
            }
        });
        $('.qtyminus').click(function (e) {
            e.preventDefault();
            var $container = $(this).closest('.count-container');
            var $field = $container.find('input[name=' + $(this).data('field') + ']');
            var currentVal = parseInt($field.val(), 10);
            if (!isNaN(currentVal) && currentVal>0) {
                $field.val(currentVal - 1);
            } else {
                $field.val(0);
            }
        });
    </script>*@
    

   @* <script>
        $('.input-group').on('click', '.button-minus', function () {
        //$('input-group').on('click' {
            //$('#btnmin').click(function () {
                var obj = { warehouseProductId: $("#btnmin").val()};
                $.ajax({
                    type: "GET",
                    //contentType: "application/json; charset=utf-8",
                    url: "Home/NumberItems",
                    data: JSON.stringify(obj),
                    dataType: "json",
                    //success: function (data) {
                    //    alert("Successfully register");
                    //    $("#btnregclose").click();
                    }
                });
            });
        });

        $('count-container').on('click'/*, function () */{
            var Operation = $(this).value();
            //var WarehouseProductId = $(this).id();
            $.ajax({

                type: "GET",//or POST
                url: "Home/NumberItems",
                //  (or whatever your url is)
                data: { WarehouseProductId, Operation },
                //can send multipledata like {data1:var1,data2:var2,data3:var3
                //can use dataType:'text/html' or 'json' if response type expected
                //success: function (responsedata) {
                //    // process on data
                //    alert("got response as " + "'" + responsedata + "'");
                //}
            })
                .done(function (data) {
                    console.log(data)
        });
        $('.qtyplus').click(function (e) {
            e.preventDefault();
            var $container = $(this).closest('.count-container');
            var $field = $container.find('input[name=' + $(this).data('field') + ']');
            var currentVal = parseInt($field.val(), 10);
            if (!isNaN(currentVal)) {
                $field.val(currentVal + 1);
            } else {
                $field.val(0);
            }
        });
        $('.qtyminus').click(function (e) {
            e.preventDefault();
            var $container = $(this).closest('.count-container');
            var $field = $container.find('input[name=' + $(this).data('field') + ']');
            var currentVal = parseInt($field.val(), 10);
            if (!isNaN(currentVal) && currentVal > 0) {
                $field.val(currentVal - 1);
            } else {
                $field.val(0);
            }
        });
    </script>*@


    @*<script>
         $('.input-group').on('click', '.button-plus', function (e) {
                incrementValue(e);
                var fieldName = $(e.target).data('field');
                var parent = $(e.target).closest('div');
                var currentVal = parseInt(parent.find('input[name=' + fieldName + ']').val(), 10);
                var id = parseInt(parent.find('input[name=Id ]').val());
                $.ajax({ url: 'blogs/test', type: 'get', data: { "value": currentVal ,"id":id}, dataType: 'json', success: function (data) { console.log(data) } })
            });

            $('.input-group').on('click', '.button-minus', function (e) {
                decrementValue(e);
                var fieldName = $(e.target).data('field');
                var parent = $(e.target).closest('div');
                var currentVal = parseInt(parent.find('input[name=' + fieldName + ']').val(), 10);
                var id = parseInt(parent.find('input[name=Id ]').val());
                $.ajax({ url: 'blogs/test', type: 'get', data: { "value": currentVal, "id": id}, dataType: 'json', success: function (data) { console.log(data) } })
            });
    </script>*@
}
